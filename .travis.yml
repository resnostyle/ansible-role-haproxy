---
sudo: required

env:
  - SITE=test.yml
  - >
    container_id=$(mktemp)
    distribution=centos
    version=7
    init=/usr/lib/systemd/systemd
    run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - >
    container_id=$(mktemp)
    distribution=ubuntu
    version=14.04
    init=/sbin/init
    run_opts=""

services:
  - docker

before_install:
  # Pull container
  - sudo docker pull ${distribution}:${version}
  # Customize container
  - sudo docker build --rm=true --file=tests/Dockerfile.${distribution} --tag=${distribution}:ansible tests

script:
 # Run container in detached state
  - sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} ${distribution}:ansible "${init}" > "${container_id}"

#  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm a

    # Syntax check
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check
  
    # Test role
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
    # Idempotence test
  - >
    sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  - >
    sudo docker exec "$(cat ${container_id})" haproxy -v

    # Clean up
  - sudo docker stop "$(cat ${container_id})"

  # Make sure haproxy is installed.
  - haproxy -v

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
